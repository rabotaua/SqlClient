<docs>
  <members name="SqlCredential">
    <SqlCredential>
      <summary> 
        <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> provides a more secure way to specify the password for a login attempt using SQL Server Authentication. <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> is comprised of a user id and a password that will be used for SQL Server Authentication. The password in a <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object is of type <see cref="T:System.Security.SecureString" />. <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> cannot be inherited. Windows Authentication (<c>Integrated Security = true</c>) remains the most secure way to log in to a SQL Server database.
      </summary>
      <remarks>
        <para>
          Use <see cref="P:Microsoft.Data.SqlClient.SqlConnection.Credential" /> to get or set a connection's <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object. Use <see cref="M:Microsoft.Data.SqlClient.SqlConnection.ChangePassword(System.String, System.String)" /> to change the password for a <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object. For information on how a <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object affects connection pool behavior, see <see href="/sql/connect/ado-net/sql-server-connection-pooling">SQL Server Connection Pooling (ADO.NET)</see>.
          </para>
        <para>
          An <see cref="T:System.InvalidOperationException" /> exception will be raised if a non-null <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object is used in a connection with any of the following connection string keywords:
        </para>
        <list type="bullet">
          <item><c>Integrated Security = true</c></item>
          <item><c>Password</c></item>
          <item><c>User ID</c></item>
        </list>
      </remarks>
      <example>
        <para>
          The following sample connects to a SQL Server database using <see cref="P:Microsoft.Data.SqlClient.SqlConnection.Credential" />:
        </para>
        <para>change connection string in the APP.CONFIG file</para>
        <code language="xml">
          &lt;connectionStrings&gt;
            &lt;add name="MyConnString" connectionString="Initial Catalog=myDB;Server=myServer" providerName="Microsoft.Data.SqlClient" /&gt;
          &lt;/connectionStrings&gt;
        </code>
        <para>Then use the following snippet:</para>
        <code language="c#">
          using System.Configuration;

          System.Windows.Controls.TextBox txtUserId = new System.Windows.Controls.TextBox();
          System.Windows.Controls.PasswordBox txtPwd = new System.Windows.Controls.PasswordBox();
          Configuration config = Configuration.WebConfigurationManager.OpenWebConfiguration(null);
          ConnectionStringSettings connString = config.ConnectionStrings.ConnectionString["MyConnString"];
         
          using (SqlConnection conn = new SqlConnection(connString.ConnectionString))
          {
              SecureString pwd = txtPwd.SecurePassword;
              pwd.MakeReadOnly();
            
              SqlCredential cred = new SqlCredential(txtUserId.Text, pwd);
              conn.Credential = cred;
            
              conn.Open();
          }
        </code>
      </example>
    </SqlCredential>
    <ctor>
      <param name="userId">
        The user id.
      </param>
      <param name="password">
        The password; a <see cref="T:System.Security.SecureString" /> value marked as read-only.  Passing a read/write <see cref="T:System.Security.SecureString" /> parameter will raise an <see cref="T:System.ArgumentException" /> .
      </param>
      <summary>
        Creates an object of type <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> .
      </summary>
      <remarks>
        The constructor does not accept null parameters. An <c>string.Empty</c> value is allowed. An attempt to pass a null parameter in the constructor will raise an <see cref="T:System.ArgumentNullException" /> exception.
      </remarks>
      <seealso href="/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </ctor>
    <Password>
      <summary>
        Gets the password component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </summary>
      <value>
        The password component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </value>
      <seealso href="/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </Password>
    <UserId>
      <summary>
        Gets the user ID component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </summary>
      <value>
        The user ID component of the <see cref="T:Microsoft.Data.SqlClient.SqlCredential" /> object.
      </value>
      <seealso href="/sql/connect/ado-net/overview-sqlclient-driver">
        Overview of the SqlClient driver
      </seealso>
    </UserId>
  </members>
</docs>
