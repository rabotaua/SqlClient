<docs>
  <members name="SqlUserDefinedAggregateAttribute">
    <SqlUserDefinedAggregateAttribute>
      <summary>
        Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.
      </summary>
      <remarks>
        <para>
          SQL Server creates a user-defined aggregate that is bound to the class definition that has the <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> custom attribute. Every user-defined aggregate must be annotated with this attribute.
        </para>
        <para>
          See "CLR User-Defined Aggregates" in SQL Server 2005 Books Online for more information on user-defined aggregates and examples.
        </para>
      </remarks>
      <example>
        <para>
          The following example shows the <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> attribute for a user-defined aggregate. The aggregate uses custom serialization, has a maximum size of 8000 bytes when serialized, and is invariant to nulls, duplicates, and order.
        </para>
        <!-- DataWorks_SqlUserDefinedAggregateAttribute_Sample #1 -->
        <code language="c#">
          using System;
          using System.IO;
          using Microsoft.SqlServer.Server;
          
          [Serializable]
          [SqlUserDefinedAggregate(
            Microsoft.SqlServer.Server.Format.UserDefined,
            IsInvariantToNulls = true,
            IsInvariantToDuplicates = false,
            IsInvariantToOrder = false,
            MaxByteSize = 8000)]
          public class Concatenate : Microsoft.SqlServer.Server.IBinarySerialize
          {
             public void Read(BinaryReader r)
             {
             }
          
             public void Write(BinaryWriter w)
             {
             }
          }
        </code>
        <!-- DataWorks_SqlUserDefinedAggregateAttribute_Sample #1 -->
        <code language="vb">
          Imports System.IO
          Imports Microsoft.SqlServer.Server
          
          &lt;Serializable(), SqlUserDefinedAggregate( _
              Microsoft.SqlServer.Server.Format.UserDefined, _ 
              IsInvariantToNulls:=True, _ 
              IsInvariantToDuplicates:=False, _
              IsInvariantToOrder:=False, _
              MaxByteSize:=8000)&gt; _
          Public Class Concatenate
              Implements Microsoft.SqlServer.Server.IBinarySerialize
          
              Public Sub Read(ByVal r As BinaryReader) Implements Microsoft.SqlServer.Server.IBinarySerialize.Read
                  
              End Sub
          
              Public Sub Write(ByVal w As BinaryWriter) Implements Microsoft.SqlServer.Server.IBinarySerialize.Write
                  
              End Sub
        </code>
      </example>
    </SqlUserDefinedAggregateAttribute>
    <ctor>
      <param name="format">
        One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the aggregate.
      </param>
      <summary>
        A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.
      </summary>
    </ctor>
    <Format>
      <summary>
        The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.
      </summary>
      <value>
        A <see cref="T:Microsoft.SqlServer.Server.Format" /> representing the serialization format.
      </value>
      <example>
        <!-- SqlUserDefinedAggregateAttribute_Aggregate1 #6 -->
        <code language="c#">
          [SqlUserDefinedAggregate(Format.Native)]
          public class SampleAggregate
          {
             //...
          }
        </code>
        <!-- SqlUserDefinedAggregateAttribute_Aggregate1 #6 -->
        <code language="vb">
          &lt;SqlUserDefinedAggregate(Format.Native)&gt;
          Public Class SampleAggregate
              '...
          End Class
        </code>
      </example>
    </Format>
    <IsInvariantToDuplicates>
      <summary>
        Indicates whether the aggregate is invariant to duplicates.
      </summary>
      <value>
        <see langword="true" /> if the aggregate is invariant to duplicates; otherwise <see langword="false" />.
      </value>
      <remarks>
        <para>
          Used by the query processor, this property is <see langword="true" /> if the aggregate is invariant to duplicates. That is, the aggregate of S, {X} is the same as aggregate of S when X is already in S. For example, aggregate functions such as MIN and MAX satisfy this property, while SUM does not.
        </para>
        <para>
          Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects both the plan selected and the results returned by the query.
        </para>
      </remarks>
    </IsInvariantToDuplicates>
    <IsInvariantToNulls>
      <summary>
        Indicates whether the aggregate is invariant to nulls.
      </summary>
      <value>
        <see langword="true" /> if the aggregate is invariant to nulls; otherwise <see langword="false" />.
      </value>
      <remarks>
        <para>
          Used by the query processor, this property is <see langword="true" /> if the aggregate is invariant to nulls. That is, the aggregate of S, {NULL} is the same as aggregate of S. For example, aggregate functions such as MIN and MAX satisfy this property, while COUNT(*) does not.
        </para>
        <para>
          Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.
        </para>
      </remarks>
    </IsInvariantToNulls>
    <IsInvariantToOrder>
      <summary>
        Indicates whether the aggregate is invariant to order.
      </summary>
      <value>
        <see langword="true" /> if the aggregate is invariant to order; otherwise <see langword="false" />.
      </value>
      <remarks>
        <para>
          Reserved for future use. This property is not currently used by the query processor: order is currently not guaranteed.
        </para>
        <para>
          Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.
        </para>
        <para>
          The default value for this property is <see langword="false" />.
        </para>
      </remarks>
    </IsInvariantToOrder>
    <IsNullIfEmpty>
      <summary>
        Indicates whether the aggregate returns <see langword="null" /> if no values have been accumulated.
      </summary>
      <value>
        <see langword="true" /> if the aggregate returns <see langword="null" /> if no values have been accumulated; otherwise <see langword="false" />.
      </value>
      <remarks>
        <para>
          Used by the query processor, this property is <see langword="true" /> if the aggregate returns <see langword="null" /> if no values have been accumulated.
        </para>
        <para>
          Incorrectly setting this property can result in incorrect query results. This property is not an optimizer hint; it affects the plan selected and the results returned by the query.
        </para>
      </remarks>
    </IsNullIfEmpty>
    <MaxByteSize>
      <summary>
        The maximum size, in bytes, of the aggregate instance.
      </summary>
      <value>
        An <see cref="T:System.Int32" /> value representing the maximum size of the aggregate instance.
      </value>
      <remarks>
        <para>
          This property does not have to be specified for Native format serialization.
        </para>
        <para>
          You must specify the <see cref="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize" /> property with the UserDefined serialization <see cref="T:Microsoft.SqlServer.Server.Format" />.
        </para>
        <para>
          The maximum allowed value for this property is specified by the <see cref="F:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue" /> field.
        </para>
        <para>
          The maximum size allowed is 2 gigabytes (GB). You can specify a number from 1 to 8000 bytes, or -1 to represent a value larger than 8000 bytes, up to 2 gigabytes.
        </para>
        <para>
          For an aggregate with user-defined serialization specified, <see cref="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize" /> refers to the total size of the serialized data. Consider an aggregate serializing a string of 10 characters ( <see cref="T:System.Char" />). When the string is serialized using a <see cref="T:System.IO.BinaryWriter" />, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of <see cref="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize" />, the total size of the serialized data must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.
        </para>
      </remarks>
    </MaxByteSize>
    <MaxByteSizeValue>
      <summary>
        The maximum size, in bytes, required to store the state of this aggregate instance during computation.
      </summary>
      <remarks>
        An <see cref="T:System.Int32" /> value representing the maximum size of the aggregate instance.
      </remarks>
    </MaxByteSizeValue>
    <Name>
      <summary>
        The name of the aggregate.
      </summary>
      <value>
        A <see cref="T:System.String" /> value representing the name of the aggregate.
      </value>
    </Name>
  </members>
</docs>
