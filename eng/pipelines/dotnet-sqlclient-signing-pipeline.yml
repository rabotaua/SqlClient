#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################

name: $(Year:YY)$(DayOfYear)$(Rev:.r)
trigger:
  branches:
    include:
    - internal/main
  paths:
    include:
    - src
    - eng
    - tools
    - .config
    - build.proj
    - Nuget.config
    - '*.cmd'
    - '*.sh'

schedules:
- cron: '30 4 * * Mon'
  displayName: Weekly Sunday 9:30 PM (UTC - 7) Build
  branches:
    include:
    - internal/main
  always: true

- cron: '30 3 * * Mon-Fri'
  displayName: Mon-Fri 8:30 PM (UTC - 7) Build
  branches:
    include:
    - internal/main

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: true

- name: publishSymbols
  displayName: 'Publish symbols'
  type: boolean
  default: false

- name: MDS_PackageRef_Version
  displayName: 'MDS package version of AKV Provider (build AKV)'
  type: string
  default: 5.1.5

- name: CurrentNetFxVersion
  displayName: 'Lowest supported .NET Framework version (MDS validation)'
  type: string
  default: 'net462'

- name: oneBranchType
  displayName: 'Select OneBranch template'
  default: Official
  values:
  - NonOfficial
  - Official

- name: isPreview
  displayName: 'Is this a preview build?'
  type: boolean
  default: false

variables:
  - template: /eng/pipelines/libraries/variables.yml@self
  - name: packageFolderName
    value: drop_buildMDS_build_signed_package
  - name: PublishSymbols
    value: ${{ parameters['publishSymbols'] }}
  - name: MDS_PackageRef_Version
    value: ${{ parameters['MDS_PackageRef_Version'] }}
  - name: CurrentNetFxVersion
    value: ${{ parameters['CurrentNetFxVersion'] }}

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.${{parameters.oneBranchType }}.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    featureFlags:
      WindowsHostVersion: 1ESWindows2022
    globalSdl: # https://aka.ms/obpipelines/sdl
      apiscan:
        enabled: ${{ not(parameters['isPreview']) }}
        softwareFolder: $(softwareFolder)
        symbolsFolder: $(symbolsFolder)
        softwarename: Microsoft.Data.SqlClient
        versionNumber: $(AssemblyFileVersion)
      tsa:
        enabled: ${{ not(parameters['isPreview']) }} # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      codeql:
        compiled:
        enabled: ${{ not(parameters['isPreview']) }}
      sbom:
        enabled: ${{ not(parameters['isPreview']) }}
        packageName: Microsoft.Data.SqlClient
        packageVersion: $(NugetPackageVersion)
      policheck:
        enabled: ${{ not(parameters['isPreview']) }}
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
        exclusionsFile: $(REPOROOT)\.config\PolicheckExclusions.xml
      asyncSdl:
        enabled: false        
        credscan:
          enabled: ${{ not(parameters['isPreview']) }}
          suppressionsFile: $(REPOROOT)/.config/CredScanSuppressions.json
        binskim:
          enabled: ${{ not(parameters['isPreview']) }}
        armory:
          enabled: ${{ not(parameters['isPreview']) }}
          break: true
        eslint: # TypeScript and JavaScript
          enabled: false
        roslyn:
          enabled: ${{ not(parameters['isPreview']) }}
          break: true
        publishLogs:
          enabled: ${{ not(parameters['isPreview']) }}
        tsaOptionsPath: $(REPOROOT)\.config\tsaoptions.json
        disableLegacyManifest: true
    stages:
    - stage: buildAKV
      displayName: 'Build AKV Provider'
      jobs:
      - template: eng/pipelines/common/templates/jobs/build-signed-akv-package-job.yml@self
        parameters:
          symbolsFolder: $(symbolsFolder)
          softwareFolder: $(softwareFolder)
          publishSymbols: ${{ parameters['publishSymbols'] }}

    - stage: buildMDS
      displayName: 'Build MDS'
      jobs:
      - template: eng/pipelines/common/templates/jobs/build-signed-package-job.yml@self
        parameters:
          symbolsFolder: $(symbolsFolder)
          softwareFolder: $(softwareFolder)
          publishSymbols: ${{ parameters['publishSymbols'] }}
          isPreview: ${{ parameters['isPreview'] }}

    - stage: mds_package_validation
      displayName: 'MDS Package Validation'
      dependsOn: buildMDS
      jobs:
      - template: eng/pipelines/common/templates/jobs/validate-signed-package-job.yml@self
        parameters:
          packageFolderName: $(packageFolderName)
          isPreview: ${{ parameters['isPreview'] }}
          downloadPackageStep:
            download: current
            artifact: $(packageFolderName)
            patterns: '**/*.*nupkg'
            displayName: 'Download NuGet Package'

      - template: eng/pipelines/common/templates/jobs/run-tests-package-reference-job.yml@self
        parameters:
          packageFolderName: $(packageFolderName)
          isPreview: ${{ parameters['isPreview'] }}
          downloadPackageStep:
            download: current
            artifact: $(packageFolderName)
            patterns: '**/*.nupkg'
            displayName: 'Download NuGet Package'
