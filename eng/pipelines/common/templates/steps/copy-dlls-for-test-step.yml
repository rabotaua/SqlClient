#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################
parameters:
  - name: Configuration
    type: string
    default: '$(Configuration)'

  - name: symbolsFolder
    type: string
    default: symbols
  
  - name: softwareFolder
    type: string
    default: software
  
  - name: referenceType
    default: project
    values:
    - project
    - package

  - name: listOfTF
    type: object
    default:
    - net462
    - net6.0
    - net8.0

  - name: product
    default: MDS
    values:
    - MDS
    - AKV
    - MSS

steps:
- powershell: |
    $software = '${{parameters.softwareFolder}}'
    $symbols = '${{parameters.symbolsFolder}}'

    md $software
    md $software\win

    md $symbols
    md $symbols\win
  displayName: 'Make base directories'
  
- ${{ each targetFramework in parameters.listOfTF }}:
  - ${{ if eq(parameters.product, 'MDS') }}:
    - powershell: |
        $software = '${{parameters.softwareFolder}}'
        $tf = '${{ targetFramework }}'
        md $software\win\$tf
        
        if ($tf.StartsWith('net4'))
        {
          Copy-Item "artifacts\${{parameters.referenceType }}\bin\Windows_NT\${{parameters.Configuration }}.AnyCPU\Microsoft.Data.SqlClient\netfx\$tf\Microsoft.Data.SqlClient.dll" "$software\win\$tf" -recurse
        }
        else
        {
          Copy-Item "artifacts\${{parameters.referenceType }}\bin\Windows_NT\${{parameters.Configuration }}.AnyCPU\Microsoft.Data.SqlClient\netcore\$tf\Microsoft.Data.SqlClient.dll" "$software\win\$tf" -recurse
        }
        
        $symbols = '${{parameters.symbolsFolder}}'
        md $symbols\win\$tf
        
        if ($tf.StartsWith('net4'))
        {
          Copy-Item "artifacts\Project\bin\Windows_NT\Release.AnyCPU\Microsoft.Data.SqlClient\netfx\$tf\Microsoft.Data.SqlClient.pdb" "$symbols\win\$tf" -recurse
        }
        else
        {
          Copy-Item "artifacts\Project\bin\Windows_NT\Release.AnyCPU\Microsoft.Data.SqlClient\netcore\$tf\Microsoft.Data.SqlClient.pdb" "$symbols\win\$tf" -recurse
        }
            
        Write-Host "Artifacts fetched for testing"
        Get-Location
      displayName: 'Prepare ${{ targetFramework }} Arifacts for Testing'

  - ${{ if eq(parameters.product, 'AKV') }}:
    - powershell: |
        $software = '${{parameters.softwareFolder}}'
        $tf = '${{ targetFramework }}'
        md $software\win\$tf
        
        Copy-Item "artifacts\${{parameters.referenceType }}\bin\Windows_NT\${{parameters.Configuration }}.AnyCPU\AzureKeyVaultProvider\$tf\Microsoft.Data.SqlClient.AlwaysEncrypted.AzureKeyVaultProvider.dll" "$software\win\$tf" -recurse
        
        $symbols = '${{parameters.symbolsFolder}}'
        md $symbols\win\$tf
        
        Copy-Item "artifacts\${{parameters.referenceType }}\bin\Windows_NT\${{parameters.Configuration }}.AnyCPU\AzureKeyVaultProvider\$tf\Microsoft.Data.SqlClient.AlwaysEncrypted.AzureKeyVaultProvider.pdb" "$symbols\win\$tf" -recurse
            
        Write-Host "Artifacts fetched for testing"
        Get-Location
      displayName: 'Prepare ${{ targetFramework }} Arifacts for Testing'

- powershell: |
    $software = '${{parameters.softwareFolder}}'
    $symbols = '${{parameters.symbolsFolder}}'

    Get-ChildItem -recurse "$software\*.dll"
    Get-ChildItem -recurse "$symbols\*.pdb"
  displayName: 'List the prepared files'
