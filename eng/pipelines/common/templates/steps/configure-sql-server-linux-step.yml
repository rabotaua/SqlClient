#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################
parameters:
  - name: password
    type: string
    default: $(password)

  - name: targetNetCoreVersion
    type: string
    default: $(MainTargetNetCoreVersion)
  
  - name: condition
    type: string
    default: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

steps:
# Linux only steps
- bash: |
    echo ${{parameters.targetNetCoreVersion }}
    
    sudo systemctl stop mssql-server
    
    # Password for the SA user (required)
    MSSQL_SA_PW=${{parameters.password }}
    if [ "$MSSQL_SA_PW" = "generated_placeholder" ]; then
      exit 0
    fi
    
    # Product ID of the version of SQL server you're installing
    # Must be evaluation, developer, express, web, standard, enterprise, or your 25 digit product key
    MSSQL_PID='enterprise'
    
    echo Running mssql-conf setup...
    sudo MSSQL_SA_PASSWORD=$MSSQL_SA_PW\
          MSSQL_PID=$MSSQL_PID \
          /opt/mssql/bin/mssql-conf -n setup accept-eula
    
    # Connect to server and get the version:
    counter=1
    errstatus=1
    while [ $counter -le 5 ] && [ $errstatus = 1 ]
    do
      echo Waiting for SQL Server to start...
      sleep 3s
      /opt/mssql-tools/bin/sqlcmd \
        -S localhost \
        -U SA \
        -P $MSSQL_SA_PW\
        -Q "SELECT @@VERSION" 2>/dev/null
      errstatus=$?
      ((counter++))
    done
    
    # Display error if connection failed:
    if [ $errstatus = 1 ]
    then
      echo Cannot connect to SQL Server, installation aborted
      exit $errstatus
    fi
  displayName: 'Configure SQL Server [Linux]'
  condition: ${{parameters.condition }}
