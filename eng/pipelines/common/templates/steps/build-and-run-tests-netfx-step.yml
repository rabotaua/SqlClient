#################################################################################
# Licensed to the .NET Foundation under one or more agreements.                 #
# The .NET Foundation licenses this file to you under the MIT license.          #
# See the LICENSE file in the project root for more information.                #
#################################################################################
parameters:  
  - name: TargetNetFxVersion
    type: string
    default: $(TargetNetFxVersion)

  - name: configuration
    type: string
    default: $(Configuration)

  - name: referenceType
    default: Project
    values:
      - Project
      - Package

  - name: NugetPackageVersion
    type: string
    default: $(NugetPackageVersion)

  - name: platform
    type: string
    default: $(Platform)

  - name: cleanFirst
    type: boolean
    default: false

  - name: TestTargetOS
    type: string
    default: Windowsnetfx
    values:
      - Windowsnetfx
      - Windowsnetcoreapp
      - Unixnetcoreapp

  - name: retryCountOnManualTests
    type: number
    default: 2

steps:
- ${{ if eq(parameters.cleanFirst, true)}}:
    - task: MSBuild@1
      displayName: 'Clean artifacts folder'
      inputs:
        solution: build.proj
        msbuildArguments: '-t:clean'

- task: MSBuild@1
  displayName: 'Build AKV Provider .NET Framework'
  inputs:
    solution: build.proj
    msbuildArchitecture: x64
    msbuildArguments: '-p:Configuration=${{parameters.configuration }} -t:BuildAKVNetFx  -p:ReferenceType=${{parameters.referenceType }}  '

- task: MSBuild@1
  displayName: 'MSBuild Build Tests for ${{parameters.TargetNetFxVersion }}'
  inputs:
    solution: build.proj
    msbuildArguments: ' -t:BuildTestsNetFx -p:ReferenceType=${{parameters.referenceType }} -p:TestMicrosoftDataSqlClientVersion=${{parameters.NugetPackageVersion }} -p:TargetNetFxVersion=${{parameters.TargetNetFxVersion }} -p:Configuration=${{parameters.configuration }} -p:Platform=${{parameters.platform }}'

- task: DotNetCoreCLI@2
  displayName: 'Run Functional Tests for ${{parameters.TargetNetFxVersion }}'
  inputs:
    command: test
    projects: 'src\Microsoft.Data.SqlClient\tests\FunctionalTests\Microsoft.Data.SqlClient.Tests.csproj'
    arguments: '-p:Platform=${{parameters.platform }} -p:TestTargetOS="${{parameters.TestTargetOS }}" -p:TargetNetFxVersion=${{parameters.TargetNetFxVersion }} -p:ReferenceType=${{parameters.referenceType }} -p:Configuration=${{parameters.configuration }} -p:TestMicrosoftDataSqlClientVersion=${{parameters.NugetPackageVersion }} --no-build -v n --filter "category!=nonnetfxtests&category!=failing&category!=nonwindowstests" --collect "Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'Run Manual Tests for ${{parameters.TargetNetFxVersion }}'
  inputs:
    command: test
    projects: 'src\Microsoft.Data.SqlClient\tests\ManualTests\Microsoft.Data.SqlClient.ManualTesting.Tests.csproj'
    arguments: '-p:Platform=${{parameters.platform }} -p:TestTargetOS="${{parameters.TestTargetOS }}" -p:TargetNetFxVersion=${{parameters.TargetNetFxVersion }} -p:ReferenceType=${{parameters.referenceType }} -p:Configuration=${{parameters.configuration }} -p:TestMicrosoftDataSqlClientVersion=${{parameters.NugetPackageVersion }} --no-build -v n --filter "category!=nonnetfxtests&category!=failing&category!=nonwindowstests" --collect "Code Coverage"'
  retryCountOnTaskFailure: ${{parameters.retryCountOnManualTests }}
